Table users {
  user_id UUID [pk, default: "gen_random_uuid()"]
  name VARCHAR(100) [not null]
  email VARCHAR(255) [unique, not null]
  password_hash VARCHAR(255) [not null]
  created_at TIMESTAMPTZ [default: "CURRENT_TIMESTAMP"]
}

Table groups {
  group_id UUID [pk, default: "gen_random_uuid()"]
  group_name VARCHAR(100) [not null]
  created_by UUID
  created_at TIMESTAMPTZ [default: "CURRENT_TIMESTAMP"]
}

Table group_invites {
  invite_token UUID [pk, default: "gen_random_uuid()"]
  group_id UUID [not null]
  expires_at TIMESTAMPTZ
  created_at TIMESTAMPTZ [default: "CURRENT_TIMESTAMP"]
}

Table user_groups {
  user_group_id UUID [pk, default: "gen_random_uuid()"]
  user_id UUID
  group_id UUID
  joined_at TIMESTAMPTZ [default: "CURRENT_TIMESTAMP"]
}

Table meals {
  meal_id UUID [pk, default: "gen_random_uuid()"]
  group_id UUID
  meal_type VARCHAR(50) [not null] // e.g., "Lunch" or "Dinner"
  dateTime TIMESTAMPTZ [not null]  // Date and time of the meal
  title VARCHAR(100) [not null]    // Title of the meal
  notes TEXT                       // Additional notes for the meal
  closed BOOLEAN [default: "FALSE"] // Whether the meal is closed for sign-ups
  fulfilled BOOLEAN [default: "FALSE"] // Fulfillment status of the meal
  created_by UUID
  created_at TIMESTAMPTZ [default: "CURRENT_TIMESTAMP"]
}

Table meal_preferences {
  preference_id UUID [pk, default: "gen_random_uuid()"]
  meal_id UUID
  user_id UUID
  preference VARCHAR(20) [not null] // e.g., "opt-in", "opt-out", "undecided", "eat later"
  created_at TIMESTAMPTZ [default: "CURRENT_TIMESTAMP"]
}

// Relationships
Ref: groups.created_by > users.user_id
Ref: group_invites.group_id > groups.group_id
Ref: user_groups.user_id > users.user_id
Ref: user_groups.group_id > groups.group_id
Ref: meals.group_id > groups.group_id
Ref: meals.created_by > users.user_id
Ref: meal_preferences.meal_id > meals.meal_id
Ref: meal_preferences.user_id > users.user_id
